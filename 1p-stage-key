#!/bin/bash

# gnu-getopt || die
GETOPT=""
for g in $(which getopt) "/usr/bin/getopt" "/usr/local/opt/gnu-getopt/bin/getopt" "/opt/homebrew/opt/gnu-getopt/bin/getopt" ; do
    if ${g} -V | grep -e '--' > /dev/null; then
	# not gnu-getopt, next
	continue
    fi
    GETOPT=${g}
done
if test -z "${GETOPT}" ; then
    # panic stations: no real getopt :-(
    echo "we need gnu-getopt to run, which we couldn't find."
    echo "on macos: try \"brew install gnu-getop\""
    exit 1
fi

usage () {
    local ret=$1
    echo "usage: 1p-stage-key KEY-NAME"
    exit ${ret}
}

TEMP=$(${GETOPT} -o 'hp' --long 'public-key,help' -n '1p-stage-key' -- "$@")
if [ $? -ne 0 ]; then
        echo 'Terminating...' >&2
        exit 1
fi
eval set -- "$TEMP"
unset TEMP

print_public_key=
while true; do
    case "$1" in
	'-p' | '--public-key')
	    print_public_key="true"
	    shift
	    continue
	    ;;
	'-h' | '--help')
	    usage 0
	    break
	    ;;
	'--')
	    shift
	    break
	    ;;
	*)
	    usage 1
	    break
	    ;;
    esac
done
key="$1"
if test -z ${key} ; then
    usage 1
fi

stage="${TMPDIR}1p-stage-key"
mkdir -p ${stage}

public_key="${stage}/${key}.public"
private_key="${stage}/${key}"

if test ! -r "${stage}/${key}.public" -o ! -r "${stage}/${key}" ; then
    ITEM=$(op item get age-org --format json --fields label=public_key,private_key)
    echo ${ITEM} | jq '.[] | select(.id == "public_key") | .value' | xargs -- printf "%s\n" > "${public_key}"
    echo ${ITEM} | jq '.[] | select(.id == "private_key") | .ssh_formats.openssh.value' | xargs -- printf "%b" > "${private_key}"
fi

if test -r "${stage}/${key}.public" -a "${print_public_key}" = "true" ; then
    cat ${public_key}
    exit 0
fi

if test -r "${stage}/${key}" ; then
    echo ${private_key}
    exit 0
fi


    
